search a node in a tree


class Node:
    def __init__(self,x):
        self.data=x
        self.left=None
        self.right=None
    def insert(self,x):
        if self.data==None:
            self.data=x
            return
        if self.data>x:
            if self.left==None:
                self.left=Node(x)
            else:
                self.left.insert(x)
        else:
            if self.right==None:
                self.right=Node(x)
            else:
                self.right.insert(x)
    def show(self):
        if self.left:
            self.left.show()
        print(self.data,end=" ")
        if self.right:
            self.right.show()
    def search(self,x):
        if self.data==x:
            print("node is found")
            return
        if x<self.data:
            if self.left is not None:
                self.left.search(x)
            else:
                print("node is not present")
        else:
            if self.right is not None:
                self.right.search(x)
            else:
                print("node is present")
root=Node(40)
while True:
    print()
    print("1.insert\n2.show\n3.search\n4.exit")
    ch=int(input("enter your choice"))
    if ch==1:
        x=int(input("enter element"))
        root.insert(x)
    elif ch==2:
        root.show()
    elif ch==3:
        temp=int(input("enter element"))
        root.search(x)
    elif ch==4:
        break
    else:
        print("invalid choice")

output:

1.insert
2.show
3.search
4.exit
enter your choice1
enter element23

1.insert
2.show
3.search
4.exit
enter your choice1
enter element68

1.insert
2.show
3.search
4.exit
enter your choice1
enter element89

1.insert
2.show
3.search
4.exit
enter your choice2
23 40 68 89 
1.insert
2.show
3.search
4.exit
enter your choice3
enter element40
node is found

1.insert
2.show
3.search
4.exit
enter your choice4